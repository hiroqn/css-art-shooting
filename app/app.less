@displayWidth: 1280px;
@displayHeight: 800px;

body {
  height: 100%;
  counter-reset: shootCount;
  background-color: #333;
  color: #eee;
}

.screen {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -@displayWidth / 2;
  margin-top: -@displayHeight / 2;
  width: @displayWidth;
  height: @displayHeight;
  transform-style: preserve-3d;
  perspective: @displayWidth;
  overflow: hidden;
}

.counter {
  position: absolute;
  top: 2em;
  right: 2em;
  font: sans-serif;
}
.counter:before {
  content: counter(shootCount);
  font-size: 4em;
}

.view {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  transform-origin: left top;
  transform: translateZ(@displayWidth);
}

.space {
  transform-style: preserve-3d;
  transform-origin: left top;
}

.axis {
  transform-style: preserve-3d;
  transform-origin: left top;
  position: absolute;
  transform: translate3d(-@displayWidth * 1.5, 0,  -@displayWidth / 2) rotateY(360deg);
  animation: spin-axis 32s linear 0s 1;
  animation-fill-mode: forwards;
}

.text {
  position: absolute;
  white-space: nowrap;
  font-weight: bold;
  font-size: 2em;
  transform-origin: left top;
  transition: text-shadow .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s;
  user-select: none;
  text-shadow: 0 0 0;
}

input[type="checkbox"] {
  position: absolute;
  visibility: hidden;
}

input[type="checkbox"]:checked {
  counter-increment: shootCount;
}

input[type="checkbox"]:checked + .text {
  color: transparent;
  text-shadow: 0 0 1em #333;
}

.make-rotate(@i) when (@i >= 0){
  .make-rotate(@i - 1);
  [data-position="@{i}"] {
    transform: rotateY(@i * 22.5deg) translate3d(@displayWidth * 1.5, @i * -@displayHeight / 4, 0);
  }
}

.make-rotate(16);
@keyframes spin-axis {
  from {
    transform: translate3d(-@displayWidth * 1.5, @displayHeight * 4,  -@displayWidth / 2) rotateY(0deg);
  }
  to {
    transform: translate3d(-@displayWidth * 1.5, 0,  -@displayWidth / 2) rotateY(360deg);
  }
}
